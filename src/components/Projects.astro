---
import Section from "./Section.astro";
// import { Button } from "./ui/button";
import type { Projects } from "@/types";
import { FaArrowUpRightFromSquare } from "react-icons/fa6";

interface Props {
  projects: Projects[];
}

const { projects } = Astro.props;
---

<Section text="Featured Projects" href="projects">
  {
    projects
      .slice(0, 3)
      .map(({ name, description, url, hosted_url, technologies }, index) => {
        const top = 98 + index * 40;
        return (
          <div
            style={`top: ${top}px;`}
            class="sticky mb-12 rounded-2xl border border-black bg-white dark:border-white dark:bg-black"
          >
            <div class="bg-difu relative z-[1] grid h-[580px] w-full grid-rows-2 rounded-2xl before:absolute before:inset-0 before:z-[-1] before:rounded-2xl before:bg-[url(/noise-bg.png)] before:bg-[length:128px] before:bg-repeat before:opacity-[7%] before:content-[''] sm:grid-cols-2 sm:grid-rows-1 md:h-96">
              <div class="px-6 pt-12">
                <h3 class="mb-5 text-3xl font-bold text-black dark:text-white">
                  {name}
                </h3>
                <p class="text-base text-black dark:text-white">
                  {description}
                </p>
                {technologies?.length > 0 && (
                  <ul class="mt-4 flex flex-wrap gap-2">
                    {technologies.map((tech) => {
                      const { name, icon: Icon } =
                        typeof tech === "string"
                          ? { name: tech, icon: null }
                          : tech;

                      return (
                        <li class="flex items-center gap-2 rounded-full border border-neutral-200 bg-neutral-100 px-3 py-1 text-xs text-black dark:border-neutral-700 dark:bg-neutral-800 dark:text-white">
                          {Icon && <Icon className="inline size-4" />}
                          {name}
                        </li>
                      );
                    })}
                  </ul>
                )}

                <div class="flex gap-5 pt-10 text-black dark:text-white">
                  <a
                    href={url}
                    target="_blank"
                    class="dark:hover:text-primary-light inline-flex items-center gap-1 text-black hover:text-primary hover:underline dark:text-white"
                  >
                    Source
                    <FaArrowUpRightFromSquare className="inline-block size-4 align-text-bottom dark:text-white text-black" />
                  </a>
                  {hosted_url && !hosted_url.includes("github.com") && (
                    <a
                      href={hosted_url}
                      target="_blank"
                      class="dark:hover:text-primary-light inline-flex items-center gap-1 text-black hover:text-primary hover:underline dark:text-white"
                    >
                      Preview
                      <FaArrowUpRightFromSquare className="inline-block size-4 align-text-bottom dark:text-primary-light text-black dark:text-white" />
                    </a>
                  )}
                </div>
              </div>
            </div>
          </div>
        );
      })
  }
  <div class="mt-10 flex justify-center">
    <!-- <Button
      variant="outline"
      className="rounded-full bg-black px-5 py-2 text-white hover:bg-gray-800 dark:bg-white dark:text-black dark:hover:bg-gray-200"
    >
      <a
        href="/projects"
      >
        View All Projects
      </a>
    </Button> -->
  </div>
</Section>
